/*
 * generated by Xtext
 */
package org.mondo.collaboration.security.macl.xtext.rule.formatting

import com.google.inject.Inject
import org.eclipse.xtext.Keyword
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig
import org.mondo.collaboration.security.macl.xtext.rule.services.MACLRuleGrammarAccess

/**
 * This class contains custom formatting declarations.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#formatting
 * on how and when to use it.
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
class MACLRuleFormatter extends AbstractDeclarativeFormatter {

	@Inject extension MACLRuleGrammarAccess
	
	override protected void configureFormatting(FormattingConfig c) {
// It's usually a good idea to activate the following three statements.
// They will add and preserve newlines around comments

		// set a maximum size of lines
        c.setAutoLinewrap(160);

		// set a line wrap after each import of a name space 
        c.setLinewrap().after(userRule);
		c.setLinewrap().after(groupRule);

		c.setLinewrap(2).before(ruleRule);
		
		// set no space before all commas
        for(Keyword comma : findKeywords(",")) {
            c.setNoSpace().before(comma);
        }
		
		// set no space before all commas
        for(Keyword comma : findKeywords(",")) {
            c.setNoSpace().before(comma);
        }
		
		// set indentation inside all curly brackets 
        // set line wrap after each left curly bracket
        // set line wrap around each right curly bracket
        findKeywordPairs("{", "}").forEach[p | 
        	c.setIndentationIncrement().after(p.getFirst());
            c.setIndentationDecrement().before(p.getSecond());
            c.setLinewrap().after(p.getFirst());
            c.setLinewrap().around(p.getSecond());]
		
		c.setLinewrap(0, 1, 2).before(SL_COMMENTRule)
		c.setLinewrap(0, 1, 2).before(ML_COMMENTRule)
		c.setLinewrap(0, 1, 1).after(ML_COMMENTRule)
		
		c.setLinewrap().before(ruleAccess.leftCurlyBracketKeyword_6);
	}
}

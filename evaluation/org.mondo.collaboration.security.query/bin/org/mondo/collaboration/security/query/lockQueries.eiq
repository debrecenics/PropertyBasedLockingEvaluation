package org.mondo.collaboration.security.query

import "http://wt/access-control"
import "http://www.eclipse.org/emf/2002/Ecore"

pattern lockOp1(ctrl1 : Control, signal : Signal, ctrl2 : Control, type) {
	Control.type(ctrl1, type);
	Control.type(ctrl2, type);
	Control.provides(ctrl2, signal);
}

pattern lockOp2(vendor, object, composite : Composite) {
	Composite.vendor(composite,vendor);
	find containedBy+(composite,object);
}

pattern lockOp2ControlCycle(vendor, object, cycle, composite : Composite) {
	Composite.vendor(composite,vendor);
	find containedBy+(composite,object);
	Control.cycle(object, cycle);
}

pattern lockOp2ControlType(vendor, object : Control, type, composite : Composite) {
	Composite.vendor(composite,vendor);
	find containedBy+(composite,object);
	Control.type(object, type);
}

pattern lockOp2ControlProvide(vendor, object : Control, signal : Signal, composite : Composite) {
	Composite.vendor(composite,vendor);
	find containedBy+(composite,object);
	Control.provides(object, signal);
}

pattern lockOp2ControlConsume(vendor, object, signal : Signal, composite : Composite) {
	Composite.vendor(composite,vendor);
	find containedBy+(composite,object);
	Control.consumes(object, signal);
}

pattern lockOp2SignalFrequency(vendor, object : Signal, frequency, composite : Composite) {
	Composite.vendor(composite,vendor);
	find containedBy+(composite,object);
	Signal.frequency(object, frequency);
}

pattern lockOp3(signal :Signal, cycle, value) {
	Control.cycle(ctrl, cycle);
	Control.provides(ctrl, signal);
	Signal.frequency(signal, value);
}

pattern fragment(fragment) {
	neg find containedBy(_,root);
	Composite.submodules(root,fragment);
}

pattern containedBy(parent,child) {	
	Composite.submodules(parent,child);
} or {
	Module.provides(parent,child);	
}
